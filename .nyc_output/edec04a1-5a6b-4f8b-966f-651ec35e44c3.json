{"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/conversions.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/conversions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":87}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":38},"end":{"line":7,"column":1}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":39}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":70}},"6":{"start":{"line":9,"column":38},"end":{"line":12,"column":2}},"7":{"start":{"line":9,"column":50},"end":{"line":12,"column":1}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":70}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":38},"end":{"line":5,"column":39}},"loc":{"start":{"line":5,"column":53},"end":{"line":7,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":38},"end":{"line":9,"column":39}},"loc":{"start":{"line":9,"column":50},"end":{"line":12,"column":1}},"line":9}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":155875,"5":1,"6":1,"7":10101,"8":1},"f":{"0":155875,"1":10101},"b":{},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/conversions.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/conversions.ts"],"names":[],"mappings":";;;AAAA,iCAA2C;AAEpC,MAAM,6BAA6B,GAAG,CAAC,EAC1C,CAAC,EACD,CAAC,GACqB,EAAU,EAAE;IAClC,OAAO,CAAC,CAAC,CAAC,GAAG,iBAAS,GAAG,CAAC,CAAA;AAC9B,CAAC,CAAA;AALY,QAAA,6BAA6B,iCAKzC;AAEM,MAAM,6BAA6B,GAAG,CAAC,KAAa,EAAY,EAAE,CAAC,CAAC;IACzE,CAAC,EAAE,CAAC,KAAK,GAAG,iBAAS,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,iBAAS,CAAC;CACjC,CAAC,CAAA;AAHW,QAAA,6BAA6B,iCAGxC","sourcesContent":["import { Position, ROOM_SIZE } from \"types\"\n\nexport const convertPositionToTerrainIndex = ({\n    x,\n    y,\n}: Position | RoomPosition): number => {\n    return (y) * ROOM_SIZE + x\n}\n\nexport const convertTerrainIndexToPosition = (index: number): Position => ({\n  x: (index % ROOM_SIZE),\n  y: Math.floor(index / ROOM_SIZE)\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3d927b3bcc419b287b4322b1eb1dda23833d676f","contentHash":"9b24f9fd0d73a6e1cafefeae14e0213998cf3bc0427b0364032c151e59c87991"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/types.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":77}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":74}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":58}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":54}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":23}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":26},"end":{"line":9,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":19},"end":{"line":9,"column":72}},"type":"binary-expr","locations":[{"start":{"line":9,"column":19},"end":{"line":9,"column":40}},{"start":{"line":9,"column":45},"end":{"line":9,"column":71}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/types.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/types.ts"],"names":[],"mappings":";;;AA0CA,IAAY,aAIX;AAJD,WAAY,aAAa;IACvB,+CAAO,CAAA;IACP,qDAAU,CAAA;IACV,iDAAQ,CAAA;AACV,CAAC,EAJW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAIxB;AAwDY,QAAA,SAAS,GAAG,EAAE,CAAA,CAAC,+BAA+B;AAC9C,QAAA,eAAe,GAAG,iBAAS,GAAC,iBAAS,CAAA,CAAC,aAAa","sourcesContent":["export interface Position {\n  x: number\n  y: number\n}\nexport interface LinkedListTask {\n  next: LinkedListTask | null\n  prev: LinkedListTask | null\n}\nexport interface EvaluationTask extends LinkedListTask {}\nexport interface StructureTask extends LinkedListTask {}\nexport interface CreepTask extends LinkedListTask {}\nexport interface HarvestTask extends CreepTask {\n  availablePositions: Position[]\n  sourceId: string\n  sourcePosition: Position\n  roomName: RoomId\n  requiredWorkParts: number\n  reservingCreeps: ReservingCreeps\n}\n\nexport interface ReservingCreeps {\n  [creepId: string]: ReservingCreep\n}\n\nexport interface ReservingCreep {\n  workParts: number\n}\n\nexport interface UpgradeTask extends CreepTask {\n  availablePositions: Position[]\n  controllerId: string\n  controllerPosition: Position\n  roomName: RoomId\n  reservingCreeps: {\n    [creepId: string]: {\n      workParts: number\n    }\n  }\n}\n\nexport type TaskId = string\nexport type RoomId = string\nexport enum QueuePriority {\n  LOW = 0,\n  MEDIUM = 1,\n  HIGH = 2\n}\n\nexport type TaskQueue = Record<TaskId, LinkedListTask>\n\nexport interface LinkedListQueue {\n  head: LinkedListTask | null\n  tail: LinkedListTask | null\n  rankedQueue: Record<QueuePriority, TaskQueue>\n}\n\nexport interface InTickCache {\n  threatsByRoom: {\n    [roomName: string]: {\n      threats: string[]\n      lastChecked: number\n    }\n  }\n}\n\nexport interface CreepMemory {}\nexport interface FlagMemory {}\nexport interface PowerCreepMemory {}\nexport interface CustomRoomMemory {\n  mineral?: {\n    type: MineralConstant\n    density: number\n    position: { x: number; y: number }\n    mineralGenerationPerTick: number\n  }\n  optimumSpawnPosition?: {\n    x: number\n    y: number\n  }\n  sources?: {\n    [sourceId: string]: {\n      energyGenerationPerTick: number\n      position: { x: number; y: number }\n    }\n  }\n  tasks?: {\n    upgrade?: UpgradeTask\n    harvest: HarvestTask[]\n  }\n  totalEnergyGenerationPerTick: number\n}\nexport interface SpawnMemory {}\n\ntype FixedLengthArray<T, N extends number, A extends T[] = []> =\n  A['length'] extends N\n    ? A\n    : FixedLengthArray<T, N, [...A, T]>\n\nexport type TERRAIN_MASK_PLAIN = 0\nexport type TERRAIN_MASK_WALL = 1\nexport type TERRAIN_MASK_SWAMP = 2\n\nexport const ROOM_SIZE = 50 // 50x50 grid for Screeps rooms\nexport const ROOM_GRID_COUNT = ROOM_SIZE*ROOM_SIZE // 50x50 grid\n\n\n// @ts-ignore \"Type instantiation is excessively deep and possibly infinite.\"\nexport type TerrainTypeArray = FixedLengthArray<TERRAIN_MASK_PLAIN | TERRAIN_MASK_WALL | TERRAIN_MASK_SWAMP, typeof ROOM_GRID_COUNT>\n\nexport type TerrainDistanceArray = FixedLengthArray<number, typeof ROOM_GRID_COUNT>"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3f443e3c1f0784f57dfb5779c000dcfd2109d0c1","contentHash":"5999e6ee9de4fc4d4f5a8cfdd421c96c673337c9f3a86be9c126314b3ece343c"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/createMapConnections.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/createMapConnections.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":29},"end":{"line":31,"column":1}},"3":{"start":{"line":6,"column":29},"end":{"line":6,"column":89}},"4":{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":96}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":15}},"7":{"start":{"line":11,"column":27},"end":{"line":11,"column":48}},"8":{"start":{"line":12,"column":25},"end":{"line":12,"column":44}},"9":{"start":{"line":13,"column":26},"end":{"line":13,"column":42}},"10":{"start":{"line":14,"column":22},"end":{"line":14,"column":48}},"11":{"start":{"line":15,"column":24},"end":{"line":15,"column":33}},"12":{"start":{"line":16,"column":4},"end":{"line":30,"column":5}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":128}},"14":{"start":{"line":17,"column":116},"end":{"line":17,"column":126}},"15":{"start":{"line":18,"column":8},"end":{"line":26,"column":9}},"16":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"17":{"start":{"line":20,"column":16},"end":{"line":20,"column":25}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":45}},"19":{"start":{"line":23,"column":32},"end":{"line":23,"column":75}},"20":{"start":{"line":24,"column":31},"end":{"line":24,"column":68}},"21":{"start":{"line":25,"column":12},"end":{"line":25,"column":44}},"22":{"start":{"line":27,"column":8},"end":{"line":27,"column":42}},"23":{"start":{"line":28,"column":8},"end":{"line":28,"column":41}},"24":{"start":{"line":29,"column":8},"end":{"line":29,"column":58}},"25":{"start":{"line":32,"column":0},"end":{"line":32,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":29},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":35},"end":{"line":31,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":102},"end":{"line":17,"column":103}},"loc":{"start":{"line":17,"column":116},"end":{"line":17,"column":126}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":29},"end":{"line":6,"column":89}},"type":"binary-expr","locations":[{"start":{"line":6,"column":29},"end":{"line":6,"column":59}},{"start":{"line":6,"column":63},"end":{"line":6,"column":89}}],"line":6},"1":{"loc":{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},{"start":{"line":7,"column":4},"end":{"line":10,"column":5}}],"line":7},"2":{"loc":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},{"start":{"line":19,"column":12},"end":{"line":21,"column":13}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":9,"4":9,"5":1,"6":1,"7":8,"8":8,"9":8,"10":8,"11":8,"12":8,"13":30,"14":48,"15":30,"16":46,"17":20,"18":26,"19":26,"20":26,"21":26,"22":30,"23":30,"24":30,"25":1},"f":{"0":9,"1":48},"b":{"0":[9,8],"1":[1,8],"2":[20,26]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/createMapConnections.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/createMapConnections.ts"],"names":[],"mappings":";;;AAAA,oGAAoG;AAC7F,MAAM,oBAAoB,GAAG,GAAS,EAAE;IAC3C,MAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;IAErF,IAAI,CAAC,gBAAgB,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,0EAA0E,CAAC,CAAA;QACvF,OAAM;KACT;IAED,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,CAAA;IAC5C,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAA;IAExC,IAAI,eAAe,GAAuB,gBAAgB,CAAA;IAE1D,MAAM,SAAS,GAAgB,IAAI,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,CAAA;IACzD,MAAM,WAAW,GAAgB,IAAI,GAAG,EAAE,CAAA;IAE1C,OAAO,eAAe,EAAE;QACpB,YAAY,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAsB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;QAG3I,KAAK,MAAM,iBAAiB,IAAI,YAAY,CAAC,eAAe,CAAC,EAAE;YAC3D,IAAI,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;gBACpC,SAAQ;aACX;YAED,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;YAEhC,MAAM,WAAW,GAAG,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC,IAAI,EAAE,CAAA;YAC/D,MAAM,UAAU,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,CAAA;YACxD,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;SAClC;QAED,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAA;QACjC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;QAChC,eAAe,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAA;KACpD;AACL,CAAC,CAAA;AApCY,QAAA,oBAAoB,wBAoChC","sourcesContent":["// Behaviour: Creates a connections list (roomNameOne-roomNameTwo) for each connection between rooms\nexport const createMapConnections = (): void => {\n    const startingRoomName = Object.keys(Game.rooms).length && Object.keys(Game.rooms)[0]\n\n    if (!startingRoomName) {\n        console.log(`CreateMapConnectionsError: No room found, cannot create map connections.`)\n        return\n    }\n\n    const mapConnections = Memory.mapConnections\n    const mapRoomGraph = Memory.mapRoomGraph\n\n    let currentRoomName: string | undefined = startingRoomName\n\n    const openQueue: Set<string> = new Set([currentRoomName])\n    const closedQueue: Set<string> = new Set()\n\n    while (currentRoomName) {\n        mapRoomGraph[currentRoomName] = Object.values(Game.map.describeExits(currentRoomName)).filter((roomName): roomName is string => !!roomName)\n\n\n        for (const neighbourRoomName of mapRoomGraph[currentRoomName]) {\n            if (closedQueue.has(neighbourRoomName)) {\n                continue\n            }\n\n            openQueue.add(neighbourRoomName)\n\n            const sortedNames = [currentRoomName, neighbourRoomName].sort()\n            const connection = `${sortedNames[0]}-${sortedNames[1]}`\n            mapConnections.push(connection)\n        }\n\n        openQueue.delete(currentRoomName)\n        closedQueue.add(currentRoomName)\n        currentRoomName = openQueue.values().next().value\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3cc0a394da2aefa360e813032a57e06daf24be7e","contentHash":"e8cd2f7a717208de2c5847c5f0d7fe2772082737309d7971ace6a3e50265a6f7"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/evaluateRoom.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/evaluateRoom.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":21},"end":{"line":18,"column":1}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":94}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":15}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":21},"end":{"line":4,"column":22}},"loc":{"start":{"line":4,"column":35},"end":{"line":18,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":9,"column":5}},{"start":{"line":6,"column":4},"end":{"line":9,"column":5}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":1,"6":1,"7":1},"f":{"0":5},"b":{"0":[1,4]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/evaluateRoom.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/evaluateRoom.ts"],"names":[],"mappings":";;;AAAO,MAAM,YAAY,GAAG,CAAC,QAAgB,EAAE,EAAE;IAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IACjC,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,CAAC,GAAG,CAAC,8DAA8D,QAAQ,EAAE,CAAC,CAAA;QACrF,OAAM;KACP;IAED,kDAAkD;IAClD,wCAAwC;IACxC,kCAAkC;IAClC,8CAA8C;IAG9C,qEAAqE;IACrE,gDAAgD;IAChD,iDAAiD;IACjD,4CAA4C;AAC9C,CAAC,CAAA;AAjBY,QAAA,YAAY,gBAiBxB","sourcesContent":["export const evaluateRoom = (roomName: string) => {\n  const room = Game.rooms[roomName]\n  if (!room) {\n    console.log(`EvaluateRoomError: Cannot evaluate room not in Game.rooms: ${roomName}`)\n    return\n  }\n\n  // Internal Evaluation: Independent of connections\n  // - Check resource generation potential\n  // - Check for threats in the room\n  // - Check how easily the room can be defended\n\n\n  // If all connections are evaluated, proceed with External Evaluation\n  // External Evaluation: Dependent on connections\n  // - Check internal evaluation of connected rooms\n  // - Evaluate potential for remote gathering\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"be0b997a7cf88da7876a77b702306f2a3773a53c","contentHash":"30fd85486992f55805a0008f906e8f90cf70a0801aa74825fd75ba6e23b883b7"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/findFreeAdjacentPositions.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/findFreeAdjacentPositions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":34},"end":{"line":32,"column":1}},"5":{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":136}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":18}},"8":{"start":{"line":11,"column":30},"end":{"line":11,"column":32}},"9":{"start":{"line":12,"column":4},"end":{"line":30,"column":5}},"10":{"start":{"line":12,"column":18},"end":{"line":12,"column":20}},"11":{"start":{"line":13,"column":8},"end":{"line":29,"column":9}},"12":{"start":{"line":13,"column":22},"end":{"line":13,"column":24}},"13":{"start":{"line":14,"column":12},"end":{"line":15,"column":25}},"14":{"start":{"line":15,"column":16},"end":{"line":15,"column":25}},"15":{"start":{"line":16,"column":23},"end":{"line":16,"column":29}},"16":{"start":{"line":17,"column":23},"end":{"line":17,"column":29}},"17":{"start":{"line":18,"column":12},"end":{"line":19,"column":25}},"18":{"start":{"line":19,"column":16},"end":{"line":19,"column":25}},"19":{"start":{"line":20,"column":33},"end":{"line":23,"column":14}},"20":{"start":{"line":24,"column":28},"end":{"line":24,"column":54}},"21":{"start":{"line":25,"column":38},"end":{"line":25,"column":67}},"22":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"23":{"start":{"line":27,"column":16},"end":{"line":27,"column":75}},"24":{"start":{"line":31,"column":4},"end":{"line":31,"column":29}},"25":{"start":{"line":33,"column":0},"end":{"line":33,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":34},"end":{"line":6,"column":35}},"loc":{"start":{"line":6,"column":90},"end":{"line":32,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},{"start":{"line":7,"column":4},"end":{"line":10,"column":5}}],"line":7},"1":{"loc":{"start":{"line":7,"column":8},"end":{"line":7,"column":72}},"type":"binary-expr","locations":[{"start":{"line":7,"column":8},"end":{"line":7,"column":21}},{"start":{"line":7,"column":25},"end":{"line":7,"column":72}}],"line":7},"2":{"loc":{"start":{"line":14,"column":12},"end":{"line":15,"column":25}},"type":"if","locations":[{"start":{"line":14,"column":12},"end":{"line":15,"column":25}},{"start":{"line":14,"column":12},"end":{"line":15,"column":25}}],"line":14},"3":{"loc":{"start":{"line":14,"column":16},"end":{"line":14,"column":36}},"type":"binary-expr","locations":[{"start":{"line":14,"column":16},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":36}}],"line":14},"4":{"loc":{"start":{"line":18,"column":12},"end":{"line":19,"column":25}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":19,"column":25}},{"start":{"line":18,"column":12},"end":{"line":19,"column":25}}],"line":18},"5":{"loc":{"start":{"line":18,"column":16},"end":{"line":18,"column":86}},"type":"binary-expr","locations":[{"start":{"line":18,"column":16},"end":{"line":18,"column":22}},{"start":{"line":18,"column":26},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":59}},{"start":{"line":18,"column":63},"end":{"line":18,"column":86}}],"line":18},"6":{"loc":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},{"start":{"line":26,"column":12},"end":{"line":28,"column":13}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":10,"6":2,"7":2,"8":8,"9":8,"10":8,"11":24,"12":24,"13":72,"14":8,"15":64,"16":64,"17":64,"18":5,"19":59,"20":59,"21":59,"22":59,"23":57,"24":8,"25":1},"f":{"0":10},"b":{"0":[2,8],"1":[10,10],"2":[8,64],"3":[72,24],"4":[5,59],"5":[64,61,61,59],"6":[57,2]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/findFreeAdjacentPositions.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/findFreeAdjacentPositions.ts"],"names":[],"mappings":";;;AAAA,6CAA2D;AAC3D,iCAA8E;AAOvE,MAAM,yBAAyB,GAAG,CAAC,EACxC,YAAY,EAAE,EACZ,CAAC,EACD,CAAC,EACD,QAAQ,EACT,EACD,YAAY,EACoB,EAAkB,EAAE;IAEpD,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,uBAAe,EAAE;QAC5D,OAAO,CAAC,GAAG,CAAC,0CAA0C,QAAQ,0CAA0C,YAAY,CAAC,MAAM,GAAG,CAAC,CAAA;QAC/H,OAAO,EAAE,CAAA;KACV;IAED,MAAM,iBAAiB,GAAmB,EAAE,CAAA;IAE5C,KAAI,IAAI,EAAE,GAAW,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;QACtC,KAAI,IAAI,EAAE,GAAW,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;YACtC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;gBAAE,SAAQ,CAAC,2BAA2B;YAC9D,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA;YACjB,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA;YACjB,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,iBAAS,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,iBAAS;gBAAE,SAAQ,CAAC,qBAAqB;YAC1F,MAAM,YAAY,GAAG,IAAA,2CAA6B,EAAC;gBACjD,CAAC,EAAE,EAAE;gBACL,CAAC,EAAE,EAAE;aACN,CAAC,CAAA;YAEF,MAAM,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,CAAA;YAC1C,MAAM,iBAAiB,GAAG,OAAO,KAAK,iBAAiB,CAAA;YACvD,IAAI,iBAAiB,EAAE;gBACrB,iBAAiB,CAAC,IAAI,CACpB,IAAI,YAAY,CACd,EAAE,EACF,EAAE,EACF,QAAQ,CACT,CACF,CAAA;aACF;SACF;KACF;IAED,OAAO,iBAAiB,CAAA;AAC1B,CAAC,CAAA;AA1CY,QAAA,yBAAyB,6BA0CrC","sourcesContent":["import { convertPositionToTerrainIndex } from \"conversions\"\nimport { Position, ROOM_GRID_COUNT, ROOM_SIZE, TerrainTypeArray } from \"types\"\n\ninterface FindFreeAdjacentPositionsParams {\n  roomPosition: RoomPosition\n  terrainArray: TerrainTypeArray | []\n}\n\nexport const findFreeAdjacentPositions = ({\n  roomPosition: {\n    x,\n    y,\n    roomName\n  },\n  terrainArray\n}: FindFreeAdjacentPositionsParams): RoomPosition[] => {\n\n  if (!terrainArray || terrainArray.length !== ROOM_GRID_COUNT) {\n    console.log(`Invalid terrainArray provided for room ${roomName}. Expected length ROOM_GRID_COUNT, got ${terrainArray.length}.`)\n    return []\n  }\n\n  const freeRoomPositions: RoomPosition[] = []\n\n  for(let dx: -1|0|1 = -1; dx <= 1; dx++) {\n    for(let dy: -1|0|1 = -1; dy <= 1; dy++) {\n      if (dx === 0 && dy === 0) continue // Skip the center position\n      const nx = x + dx\n      const ny = y + dy\n      if (nx < 0 || nx >= ROOM_SIZE || ny < 0 || ny >= ROOM_SIZE) continue // Skip out of bounds\n      const terrainIndex = convertPositionToTerrainIndex({\n        x: nx,\n        y: ny\n      })\n\n      const terrain = terrainArray[terrainIndex]\n      const terrainIsWalkable = terrain !== TERRAIN_MASK_WALL\n      if (terrainIsWalkable) {\n        freeRoomPositions.push(\n          new RoomPosition(\n            nx,\n            ny,\n            roomName\n          )\n        )\n      }\n    }\n  }\n\n  return freeRoomPositions\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9116833e7a304cba40e816f13161ffbcf6feea01","contentHash":"55cbe5d1fd6466dd7dab42f2a3f72c738083bf03a49465a92adf2d84e0ae4495"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/generateRoomTasksOnSpawn.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/generateRoomTasksOnSpawn.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":72}},"3":{"start":{"line":5,"column":31},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":35},"end":{"line":6,"column":70}},"5":{"start":{"line":7,"column":33},"end":{"line":78,"column":1}},"6":{"start":{"line":8,"column":17},"end":{"line":8,"column":37}},"7":{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":109}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":15}},"10":{"start":{"line":13,"column":23},"end":{"line":13,"column":38}},"11":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":87}},"13":{"start":{"line":16,"column":8},"end":{"line":16,"column":15}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":58}},"15":{"start":{"line":19,"column":23},"end":{"line":19,"column":45}},"16":{"start":{"line":20,"column":25},"end":{"line":20,"column":83}},"17":{"start":{"line":21,"column":24},"end":{"line":32,"column":5}},"18":{"start":{"line":33,"column":4},"end":{"line":36,"column":6}},"19":{"start":{"line":37,"column":22},"end":{"line":37,"column":38}},"20":{"start":{"line":38,"column":20},"end":{"line":38,"column":43}},"21":{"start":{"line":39,"column":4},"end":{"line":39,"column":50}},"22":{"start":{"line":40,"column":26},"end":{"line":40,"column":44}},"23":{"start":{"line":41,"column":41},"end":{"line":61,"column":9}},"24":{"start":{"line":42,"column":8},"end":{"line":45,"column":10}},"25":{"start":{"line":46,"column":28},"end":{"line":58,"column":9}},"26":{"start":{"line":59,"column":8},"end":{"line":59,"column":44}},"27":{"start":{"line":60,"column":8},"end":{"line":60,"column":45}},"28":{"start":{"line":62,"column":41},"end":{"line":62,"column":75}},"29":{"start":{"line":63,"column":4},"end":{"line":63,"column":75}},"30":{"start":{"line":64,"column":24},"end":{"line":64,"column":51}},"31":{"start":{"line":65,"column":4},"end":{"line":72,"column":5}},"32":{"start":{"line":66,"column":8},"end":{"line":71,"column":10}},"33":{"start":{"line":73,"column":33},"end":{"line":76,"column":6}},"34":{"start":{"line":74,"column":46},"end":{"line":74,"column":56}},"35":{"start":{"line":77,"column":4},"end":{"line":77,"column":62}},"36":{"start":{"line":79,"column":0},"end":{"line":79,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":33},"end":{"line":7,"column":34}},"loc":{"start":{"line":7,"column":47},"end":{"line":78,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":41,"column":56},"end":{"line":41,"column":57}},"loc":{"start":{"line":41,"column":75},"end":{"line":61,"column":5}},"line":41},"2":{"name":"(anonymous_2)","decl":{"start":{"line":74,"column":36},"end":{"line":74,"column":37}},"loc":{"start":{"line":74,"column":46},"end":{"line":74,"column":56}},"line":74}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},{"start":{"line":9,"column":4},"end":{"line":12,"column":5}}],"line":9},"1":{"loc":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},{"start":{"line":14,"column":4},"end":{"line":17,"column":5}}],"line":14},"2":{"loc":{"start":{"line":18,"column":29},"end":{"line":18,"column":57}},"type":"binary-expr","locations":[{"start":{"line":18,"column":29},"end":{"line":18,"column":51}},{"start":{"line":18,"column":55},"end":{"line":18,"column":57}}],"line":18},"3":{"loc":{"start":{"line":39,"column":25},"end":{"line":39,"column":49}},"type":"binary-expr","locations":[{"start":{"line":39,"column":25},"end":{"line":39,"column":43}},{"start":{"line":39,"column":47},"end":{"line":39,"column":49}}],"line":39},"4":{"loc":{"start":{"line":65,"column":4},"end":{"line":72,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":72,"column":5}},{"start":{"line":65,"column":4},"end":{"line":72,"column":5}}],"line":65}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":8,"7":8,"8":2,"9":2,"10":6,"11":6,"12":4,"13":4,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":2,"32":2,"33":2,"34":2,"35":2,"36":1},"f":{"0":8,"1":2,"2":2},"b":{"0":[2,6],"1":[4,2],"2":[2,1],"3":[2,1],"4":[2,0]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/generateRoomTasksOnSpawn.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/generateRoomTasksOnSpawn.ts"],"names":[],"mappings":";;;AAAA,yEAAqE;AACrE,+DAA2D;AAC3D,uEAAoE;AAG7D,MAAM,wBAAwB,GAAG,CAAC,QAAgB,EAAE,EAAE;IAC3D,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IAEjC,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,CAAC,GAAG,CAAC,6EAA6E,QAAQ,EAAE,CAAC,CAAA;QACpG,OAAM;KACP;IAED,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;IAElC,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAC,GAAG,CAAC,uDAAuD,QAAQ,EAAE,CAAC,CAAA;QAC9E,OAAM;KACP;IAED,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;IACrD,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IAEzC,MAAM,YAAY,GAAG,IAAA,2CAAoB,EAAC,QAAQ,CAAC,CAAA;IAEnD,MAAM,WAAW,GAAgB;QAC/B,kBAAkB,EAAE,IAAA,qDAAyB,EAAC;YAC5C,YAAY,EAAE,UAAU,CAAC,GAAG;YAC5B,YAAY;SACb,CAAC;QACF,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI;QACV,QAAQ;QACR,eAAe,EAAE,EAAE;QACnB,YAAY,EAAE,UAAU,CAAC,EAAE;QAC3B,kBAAkB,EAAE,UAAU,CAAC,GAAG;KACnC,CAAA;IACD,UAAU,CAAC,KAAK,GAAG;QACjB,OAAO,EAAE,WAAW;QACpB,OAAO,EAAE,EAAE;KACZ,CAAA;IACD,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAA;IAElC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;IACvC,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,IAAI,EAAE,CAAA;IAC7C,MAAM,aAAa,GAAG,UAAU,CAAC,OAAO,CAAA;IAExC,MAAM,4BAA4B,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;QACpE,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG;YACzB,uBAAuB,EAAE,MAAM,CAAC,cAAc,GAAG,GAAG;YACpD,QAAQ,EAAE,MAAM,CAAC,GAAG;SACrB,CAAA;QAED,MAAM,WAAW,GAAgB;YAC/B,kBAAkB,EAAE,IAAA,qDAAyB,EAAC;gBAC5C,YAAY,EAAE,MAAM,CAAC,GAAG;gBACxB,YAAY;aACb,CAAC;YACF,iBAAiB,EAAE,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,uBAAuB,GAAG,CAAC;YACvE,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,QAAQ;YAClB,eAAe,EAAE,EAAE;YACnB,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,cAAc,EAAE,MAAM,CAAC,GAAG;SAC3B,CAAA;QACD,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;QAEnC,OAAO,KAAK,GAAG,MAAM,CAAC,cAAc,CAAA;IACtC,CAAC,EAAE,CAAC,CAAC,CAAA;IAEL,MAAM,4BAA4B,GAAG,4BAA4B,GAAG,GAAG,CAAA,CAAC,mDAAmD;IAE3H,UAAU,CAAC,4BAA4B,GAAG,4BAA4B,CAAA;IAEtE,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAA;IAE/C,IAAI,WAAW,EAAE;QACf,UAAU,CAAC,OAAO,GAAG;YACnB,IAAI,EAAE,WAAW,CAAC,WAAW;YAC7B,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,QAAQ,EAAE,WAAW,CAAC,GAAG;YACzB,wBAAwB,EAAE,WAAW,CAAC,OAAO,GAAG,kBAAkB;SACnE,CAAA;KACF;IAED,MAAM,oBAAoB,GAAG,IAAA,oDAAyB,EAAC;QACrD,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC;QACjD,YAAY;KACb,CAAC,CAAA;IAEF,UAAU,CAAC,oBAAoB,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAA;AAC3D,CAAC,CAAA;AAvFY,QAAA,wBAAwB,4BAuFpC","sourcesContent":["import { findFreeAdjacentPositions } from \"findFreeAdjacentPositions\"\nimport { generateTerrainArray } from \"generateTerrainArray\"\nimport { singleSourceShortestPaths } from \"singleSourceShortestPath\"\nimport { HarvestTask, UpgradeTask } from \"types\"\n\nexport const generateRoomTasksOnSpawn = (roomName: string) => {\n  const room = Game.rooms[roomName]\n\n  if (!room) {\n    console.log(`GenerateRoomTasksError: Cannot generate tasks for room not in Game.rooms: ${roomName}`)\n    return\n  }\n\n  const controller = room.controller\n\n  if (!controller) {\n    console.log(`GenerateRoomTasksError: No controller found in room ${roomName}`)\n    return\n  }\n\n  Memory.rooms[roomName] = Memory.rooms[roomName] || {}\n  const roomMemory = Memory.rooms[roomName]\n\n  const terrainArray = generateTerrainArray(roomName)\n\n  const upgradeTask: UpgradeTask = {\n    availablePositions: findFreeAdjacentPositions({\n      roomPosition: controller.pos,\n      terrainArray\n    }),\n    next: null,\n    prev: null,\n    roomName,\n    reservingCreeps: {},\n    controllerId: controller.id,\n    controllerPosition: controller.pos,\n  }\n  roomMemory.tasks = {\n    upgrade: upgradeTask,\n    harvest: []\n  }\n  const roomTasks = roomMemory.tasks\n\n  const sources = room.find(FIND_SOURCES)\n  roomMemory.sources = roomMemory.sources || {}\n  const sourcesMemory = roomMemory.sources\n\n  const energyGenerationPerTickCycle = sources.reduce((total, source) => {\n    sourcesMemory[source.id] = {\n      energyGenerationPerTick: source.energyCapacity / 300,\n      position: source.pos\n    }\n\n    const harvestTask: HarvestTask = {\n      availablePositions: findFreeAdjacentPositions({\n        roomPosition: source.pos,\n        terrainArray\n      }),\n      requiredWorkParts: sourcesMemory[source.id].energyGenerationPerTick / 2, // Each WORK part harvests 2 energy per tick\n      next: null,\n      prev: null,\n      roomName: roomName,\n      reservingCreeps: {},\n      sourceId: source.id,\n      sourcePosition: source.pos,\n    }\n    roomTasks.harvest.push(harvestTask)\n\n    return total + source.energyCapacity\n  }, 0)\n\n  const totalEnergyGenerationPerTick = energyGenerationPerTickCycle / 300 // Source generation per tick over a 300 tick cycle\n\n  roomMemory.totalEnergyGenerationPerTick = totalEnergyGenerationPerTick\n\n  const roomMineral = room.find(FIND_MINERALS)[0]\n\n  if (roomMineral) {\n    roomMemory.mineral = {\n      type: roomMineral.mineralType,\n      density: roomMineral.density,\n      position: roomMineral.pos,\n      mineralGenerationPerTick: roomMineral.density / MINERAL_REGEN_TIME\n    }\n  }\n\n  const optimumSpawnPosition = singleSourceShortestPaths({\n    startingPoints: sources.map(source => source.pos),\n    terrainArray\n  })\n\n  roomMemory.optimumSpawnPosition = optimumSpawnPosition[0]\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3b8d5f2a963e0fedd7c8b027f9a8b60b9c0e318a","contentHash":"ad0a705f73c2b9b714fba01b47805c89dd85ce854989cd8fde0a8a236f664b5e"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/generateTerrainArray.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/generateTerrainArray.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":29},"end":{"line":23,"column":1}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":91}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":18}},"9":{"start":{"line":13,"column":20},"end":{"line":13,"column":37}},"10":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":88}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":18}},"13":{"start":{"line":18,"column":4},"end":{"line":22,"column":7}},"14":{"start":{"line":19,"column":25},"end":{"line":19,"column":80}},"15":{"start":{"line":20,"column":21},"end":{"line":20,"column":38}},"16":{"start":{"line":21,"column":8},"end":{"line":21,"column":20}},"17":{"start":{"line":24,"column":0},"end":{"line":24,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":29},"end":{"line":7,"column":30}},"loc":{"start":{"line":7,"column":43},"end":{"line":23,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":54},"end":{"line":18,"column":55}},"loc":{"start":{"line":18,"column":68},"end":{"line":22,"column":5}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},{"start":{"line":9,"column":4},"end":{"line":12,"column":5}}],"line":9},"1":{"loc":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},{"start":{"line":14,"column":4},"end":{"line":17,"column":5}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":5,"6":5,"7":1,"8":1,"9":4,"10":4,"11":1,"12":1,"13":3,"14":7500,"15":7500,"16":7500,"17":1},"f":{"0":5,"1":7500},"b":{"0":[1,4],"1":[1,3]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/generateTerrainArray.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/generateTerrainArray.ts"],"names":[],"mappings":";;;AAAA,6CAA2D;AAC3D,iCAAyD;AAEzD,6EAA6E;AACtE,MAAM,oBAAoB,GAAG,CAAC,QAAgB,EAAyB,EAAE;IAC5E,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IAEjC,IAAI,CAAC,IAAI,EAAE;QACP,OAAO,CAAC,GAAG,CAAC,mCAAmC,QAAQ,0BAA0B,CAAC,CAAA;QAClF,OAAO,EAAE,CAAA;KACZ;IAED,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;IAEjC,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,wDAAwD,QAAQ,EAAE,CAAC,CAAA;QAC/E,OAAO,EAAE,CAAA;KACZ;IAGD,OAAO,KAAK,CAAC,uBAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;QACnD,MAAM,EACF,CAAC,EAAC,CAAC,EACN,GAAG,IAAA,2CAA6B,EAAC,KAAK,CAAC,CAAA;QACxC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAC9B,OAAO,IAAI,CAAA;IACf,CAAC,CAAqB,CAAA;AAC1B,CAAC,CAAA;AAvBY,QAAA,oBAAoB,wBAuBhC","sourcesContent":["import { convertTerrainIndexToPosition } from \"conversions\"\nimport { ROOM_GRID_COUNT, TerrainTypeArray } from \"types\"\n\n// @ts-ignore \"Type instantiation is excessively deep and possibly infinite.\"\nexport const generateTerrainArray = (roomName: string): TerrainTypeArray | [] => {\n    const room = Game.rooms[roomName]\n\n    if (!room) {\n        console.log(`GenerateTerrainArrayError: Room ${roomName} not found in Game.rooms`)\n        return []\n    }\n\n    const terrain = room.getTerrain()\n\n    if (!terrain) {\n        console.log(`GenerateTerrainArrayError: No terrain found for room ${roomName}`)\n        return []\n    }\n\n\n    return Array(ROOM_GRID_COUNT).fill(0).map((_, index) => {\n        const {\n            x,y\n        } = convertTerrainIndexToPosition(index)\n        const type = terrain.get(x, y)\n        return type\n    }) as TerrainTypeArray\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"793338c911ce13b13b6c1a1451d17c55f2d12b95","contentHash":"2ec6355acbdd02b5eaa307685a98ce1048bd9d4c232aea475e9f711e1a33be55"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/singleSourceShortestPath.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/singleSourceShortestPath.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":36},"end":{"line":5,"column":72}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":34},"end":{"line":35,"column":1}},"6":{"start":{"line":8,"column":29},"end":{"line":8,"column":97}},"7":{"start":{"line":8,"column":57},"end":{"line":8,"column":96}},"8":{"start":{"line":9,"column":31},"end":{"line":13,"column":50}},"9":{"start":{"line":10,"column":8},"end":{"line":12,"column":11}},"10":{"start":{"line":11,"column":12},"end":{"line":11,"column":50}},"11":{"start":{"line":14,"column":31},"end":{"line":14,"column":62}},"12":{"start":{"line":15,"column":28},"end":{"line":28,"column":17}},"13":{"start":{"line":16,"column":27},"end":{"line":16,"column":85}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":53}},"15":{"start":{"line":18,"column":8},"end":{"line":26,"column":9}},"16":{"start":{"line":19,"column":38},"end":{"line":22,"column":14}},"17":{"start":{"line":23,"column":12},"end":{"line":25,"column":15}},"18":{"start":{"line":23,"column":41},"end":{"line":23,"column":94}},"19":{"start":{"line":24,"column":16},"end":{"line":24,"column":31}},"20":{"start":{"line":27,"column":8},"end":{"line":27,"column":19}},"21":{"start":{"line":30,"column":40},"end":{"line":33,"column":34}},"22":{"start":{"line":31,"column":35},"end":{"line":31,"column":54}},"23":{"start":{"line":32,"column":41},"end":{"line":32,"column":103}},"24":{"start":{"line":33,"column":28},"end":{"line":33,"column":33}},"25":{"start":{"line":34,"column":4},"end":{"line":34,"column":88}},"26":{"start":{"line":36,"column":0},"end":{"line":36,"column":62}},"27":{"start":{"line":37,"column":27},"end":{"line":76,"column":1}},"28":{"start":{"line":38,"column":22},"end":{"line":38,"column":71}},"29":{"start":{"line":39,"column":18},"end":{"line":39,"column":20}},"30":{"start":{"line":40,"column":23},"end":{"line":40,"column":78}},"31":{"start":{"line":41,"column":4},"end":{"line":41,"column":30}},"32":{"start":{"line":42,"column":4},"end":{"line":42,"column":22}},"33":{"start":{"line":43,"column":4},"end":{"line":74,"column":5}},"34":{"start":{"line":44,"column":32},"end":{"line":44,"column":45}},"35":{"start":{"line":45,"column":29},"end":{"line":45,"column":94}},"36":{"start":{"line":46,"column":32},"end":{"line":46,"column":55}},"37":{"start":{"line":47,"column":35},"end":{"line":47,"column":61}},"38":{"start":{"line":48,"column":8},"end":{"line":73,"column":9}},"39":{"start":{"line":48,"column":22},"end":{"line":48,"column":24}},"40":{"start":{"line":49,"column":12},"end":{"line":72,"column":13}},"41":{"start":{"line":49,"column":26},"end":{"line":49,"column":28}},"42":{"start":{"line":50,"column":16},"end":{"line":51,"column":29}},"43":{"start":{"line":51,"column":20},"end":{"line":51,"column":29}},"44":{"start":{"line":52,"column":27},"end":{"line":52,"column":49}},"45":{"start":{"line":53,"column":27},"end":{"line":53,"column":49}},"46":{"start":{"line":54,"column":16},"end":{"line":55,"column":29}},"47":{"start":{"line":55,"column":20},"end":{"line":55,"column":29}},"48":{"start":{"line":56,"column":38},"end":{"line":56,"column":104}},"49":{"start":{"line":57,"column":45},"end":{"line":57,"column":72}},"50":{"start":{"line":59,"column":16},"end":{"line":60,"column":29}},"51":{"start":{"line":60,"column":20},"end":{"line":60,"column":29}},"52":{"start":{"line":62,"column":36},"end":{"line":62,"column":89}},"53":{"start":{"line":64,"column":16},"end":{"line":66,"column":17}},"54":{"start":{"line":65,"column":20},"end":{"line":65,"column":49}},"55":{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},"56":{"start":{"line":70,"column":20},"end":{"line":70,"column":59}},"57":{"start":{"line":75,"column":4},"end":{"line":75,"column":21}},"58":{"start":{"line":77,"column":21},"end":{"line":77,"column":22}},"59":{"start":{"line":78,"column":21},"end":{"line":78,"column":22}},"60":{"start":{"line":79,"column":20},"end":{"line":79,"column":28}},"61":{"start":{"line":80,"column":24},"end":{"line":84,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":34},"end":{"line":7,"column":35}},"loc":{"start":{"line":7,"column":128},"end":{"line":35,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":48},"end":{"line":8,"column":49}},"loc":{"start":{"line":8,"column":57},"end":{"line":8,"column":96}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":55},"end":{"line":9,"column":56}},"loc":{"start":{"line":9,"column":96},"end":{"line":13,"column":5}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":10,"column":32},"end":{"line":10,"column":33}},"loc":{"start":{"line":10,"column":50},"end":{"line":12,"column":9}},"line":10},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":50},"end":{"line":15,"column":51}},"loc":{"start":{"line":15,"column":69},"end":{"line":28,"column":5}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":34},"end":{"line":23,"column":35}},"loc":{"start":{"line":23,"column":41},"end":{"line":23,"column":94}},"line":23},"6":{"name":"(anonymous_6)","decl":{"start":{"line":23,"column":104},"end":{"line":23,"column":105}},"loc":{"start":{"line":23,"column":113},"end":{"line":25,"column":13}},"line":23},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":13},"end":{"line":31,"column":14}},"loc":{"start":{"line":31,"column":35},"end":{"line":31,"column":54}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":32,"column":16},"end":{"line":32,"column":17}},"loc":{"start":{"line":32,"column":41},"end":{"line":32,"column":103}},"line":32},"9":{"name":"(anonymous_9)","decl":{"start":{"line":33,"column":13},"end":{"line":33,"column":14}},"loc":{"start":{"line":33,"column":28},"end":{"line":33,"column":33}},"line":33},"10":{"name":"(anonymous_10)","decl":{"start":{"line":37,"column":27},"end":{"line":37,"column":28}},"loc":{"start":{"line":37,"column":52},"end":{"line":76,"column":1}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":37},"end":{"line":7,"column":66}},"type":"default-arg","locations":[{"start":{"line":7,"column":61},"end":{"line":7,"column":66}}],"line":7},"1":{"loc":{"start":{"line":7,"column":68},"end":{"line":7,"column":91}},"type":"default-arg","locations":[{"start":{"line":7,"column":86},"end":{"line":7,"column":91}}],"line":7},"2":{"loc":{"start":{"line":17,"column":8},"end":{"line":17,"column":52}},"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":29}},{"start":{"line":17,"column":33},"end":{"line":17,"column":52}}],"line":17},"3":{"loc":{"start":{"line":18,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":26,"column":9}},{"start":{"line":18,"column":8},"end":{"line":26,"column":9}}],"line":18},"4":{"loc":{"start":{"line":32,"column":41},"end":{"line":32,"column":103}},"type":"binary-expr","locations":[{"start":{"line":32,"column":41},"end":{"line":32,"column":72}},{"start":{"line":32,"column":76},"end":{"line":32,"column":103}}],"line":32},"5":{"loc":{"start":{"line":50,"column":16},"end":{"line":51,"column":29}},"type":"if","locations":[{"start":{"line":50,"column":16},"end":{"line":51,"column":29}},{"start":{"line":50,"column":16},"end":{"line":51,"column":29}}],"line":50},"6":{"loc":{"start":{"line":50,"column":20},"end":{"line":50,"column":40}},"type":"binary-expr","locations":[{"start":{"line":50,"column":20},"end":{"line":50,"column":28}},{"start":{"line":50,"column":32},"end":{"line":50,"column":40}}],"line":50},"7":{"loc":{"start":{"line":54,"column":16},"end":{"line":55,"column":29}},"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":55,"column":29}},{"start":{"line":54,"column":16},"end":{"line":55,"column":29}}],"line":54},"8":{"loc":{"start":{"line":54,"column":20},"end":{"line":54,"column":90}},"type":"binary-expr","locations":[{"start":{"line":54,"column":20},"end":{"line":54,"column":26}},{"start":{"line":54,"column":30},"end":{"line":54,"column":53}},{"start":{"line":54,"column":57},"end":{"line":54,"column":63}},{"start":{"line":54,"column":67},"end":{"line":54,"column":90}}],"line":54},"9":{"loc":{"start":{"line":59,"column":16},"end":{"line":60,"column":29}},"type":"if","locations":[{"start":{"line":59,"column":16},"end":{"line":60,"column":29}},{"start":{"line":59,"column":16},"end":{"line":60,"column":29}}],"line":59},"10":{"loc":{"start":{"line":64,"column":16},"end":{"line":66,"column":17}},"type":"if","locations":[{"start":{"line":64,"column":16},"end":{"line":66,"column":17}},{"start":{"line":64,"column":16},"end":{"line":66,"column":17}}],"line":64},"11":{"loc":{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},"type":"if","locations":[{"start":{"line":69,"column":16},"end":{"line":71,"column":17}},{"start":{"line":69,"column":16},"end":{"line":71,"column":17}}],"line":69}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":7,"8":5,"9":7,"10":17500,"11":5,"12":5,"13":7,"14":7,"15":7,"16":0,"17":0,"18":0,"19":0,"20":7,"21":5,"22":12500,"23":12500,"24":100,"25":5,"26":1,"27":1,"28":7,"29":7,"30":7,"31":7,"32":7,"33":7,"34":17496,"35":17496,"36":17496,"37":17496,"38":17496,"39":17496,"40":52488,"41":52488,"42":157464,"43":17496,"44":139968,"45":139968,"46":139968,"47":4172,"48":135796,"49":135796,"50":135796,"51":32,"52":135764,"53":135764,"54":17489,"55":135764,"56":17489,"57":7,"58":1,"59":1,"60":1,"61":1},"f":{"0":5,"1":7,"2":7,"3":17500,"4":7,"5":0,"6":0,"7":12500,"8":12500,"9":100,"10":7},"b":{"0":[5],"1":[5],"2":[7,0],"3":[0,7],"4":[12500,100],"5":[17496,139968],"6":[157464,52488],"7":[4172,135796],"8":[139968,138918,137868,136832],"9":[32,135764],"10":[17489,118275],"11":[17489,118275]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/singleSourceShortestPath.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/singleSourceShortestPath.ts"],"names":[],"mappings":";;;AAAA,6CAA0F;AAC1F,yEAAqE;AACrE,iCAAwH;AASjH,MAAM,yBAAyB,GAAG,CAAC,EACtC,qBAAqB,GAAG,KAAK,EAC7B,eAAe,GAAG,KAAK,EACvB,cAAc,EACd,YAAY,EACiB,EAAc,EAAE;IAC7C,MAAM,gBAAgB,GAA2B,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,kBAAkB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAA;IACrH,MAAM,kBAAkB,GAAyB,gBAAgB,CAAC,MAAM,CAAuB,UAAU,YAAkC,EAAE,eAAqC;QAC9K,OAAO,YAAY,CAAC,GAAG,CAAS,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAC7C,OAAO,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC,CAAA;QACzC,CAAC,CAAyB,CAAA;IAC9B,CAAC,EAAE,IAAI,KAAK,CAAC,uBAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAyB,CAAC,CAAA;IAE9D,MAAM,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,CAAA;IAE1D,MAAM,eAAe,GAAgB,cAAc,CAAC,MAAM,CAAc,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE;QACtF,MAAM,UAAU,GAAG,IAAA,2CAA6B,EAAC,QAAQ,CAAC,CAAA;QAC1D,qBAAqB,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;QAE5C,IAAG,eAAe,EAAE;YAChB,MAAM,iBAAiB,GAAG,IAAA,qDAAyB,EAAC;gBAChD,YAAY,EAAE,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC;gBACzE,YAAY;aACf,CAAC,CAAA;YAEF,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAA,2CAA6B,EAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC7E,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YAClB,CAAC,CAAC,CAAA;SACL;QAED,OAAO,GAAG,CAAA;IACd,CAAC,EAAE,IAAI,GAAG,EAAU,CAAC,CAAA;IAErB,gEAAgE;IAChE,MAAM,2BAA2B,GAAG,kBAAkB;SACjD,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;SAC/C,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,QAAQ,KAAK,kBAAkB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC/F,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,CAAA;IAE9B,OAAO,2BAA2B,CAAC,GAAG,CAAC,2CAA6B,CAAC,CAAA;AACzE,CAAC,CAAA;AAxCY,QAAA,yBAAyB,6BAwCrC;AAED,MAAM,kBAAkB,GAAG,CAAC,YAA8B,EAAE,KAAe,EAAwB,EAAE;IACjG,MAAM,SAAS,GAAa,IAAI,KAAK,CAAC,uBAAe,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAyB,CAAA;IAC7F,MAAM,KAAK,GAAgB,EAAE,CAAA;IAC7B,MAAM,UAAU,GAAG,IAAA,2CAA6B,EAAC,KAAK,CAAC,CAAA;IACvD,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;IACzB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAEjB,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACrB,MAAM,eAAe,GAAG,KAAK,CAAC,KAAK,EAAG,CAAA;QACtC,MAAM,YAAY,GAAG,IAAA,2CAA6B,EAAC,eAAe,CAAC,CAAA;QAEnE,MAAM,eAAe,GAAG,SAAS,CAAC,YAAY,CAAC,CAAA;QAC/C,MAAM,kBAAkB,GAAG,YAAY,CAAC,YAAY,CAAC,CAAA;QAErD,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;YAC7B,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;gBAC7B,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;oBAAE,SAAQ,CAAC,4BAA4B;gBAE/D,MAAM,EAAE,GAAG,eAAe,CAAC,CAAC,GAAG,EAAE,CAAA;gBACjC,MAAM,EAAE,GAAG,eAAe,CAAC,CAAC,GAAG,EAAE,CAAA;gBAEjC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,iBAAS,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,iBAAS;oBAAE,SAAQ,CAAC,gBAAgB;gBAErF,MAAM,aAAa,GAAG,IAAA,2CAA6B,EAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;gBACrE,MAAM,oBAAoB,GAAG,YAAY,CAAC,aAAa,CAAC,CAAA;gBAExD,iDAAiD;gBACjD,IAAI,oBAAoB,KAAK,iBAAiB;oBAAE,SAAQ,CAAC,aAAa;gBAEtE,wEAAwE;gBACxE,MAAM,WAAW,GAAG,eAAe,GAAG,eAAe,CAAC,kBAAkB,CAAC,CAAA;gBAEzE,kEAAkE;gBAClE,IAAG,SAAS,CAAC,aAAa,CAAC,KAAK,QAAQ,EAAE;oBACtC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;iBAC/B;gBAED,yEAAyE;gBACzE,sEAAsE;gBACtE,IAAI,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC,EAAE;oBACxC,SAAS,CAAC,aAAa,CAAC,GAAG,WAAW,CAAA;iBACzC;aACJ;SACJ;KACJ;IAED,OAAO,SAAiC,CAAA;AAC5C,CAAC,CAAA;AAED,MAAM,YAAY,GAAG,CAAC,CAAA;AACtB,MAAM,YAAY,GAAG,CAAC,CAAA;AACtB,MAAM,WAAW,GAAG,QAAQ,CAAA;AAE5B,MAAM,eAAe,GAAgF;IACjG,YAAY;IACZ,WAAW;IACX,YAAY,EAAE,qBAAqB;CACtC,CAAA","sourcesContent":["import { convertPositionToTerrainIndex, convertTerrainIndexToPosition } from \"conversions\"\nimport { findFreeAdjacentPositions } from \"findFreeAdjacentPositions\"\nimport { Position, ROOM_GRID_COUNT, ROOM_SIZE, TERRAIN_MASK_PLAIN, TerrainDistanceArray, TerrainTypeArray } from \"types\"\n\ninterface SingleSourceShortestPathParams {\n    excludeStartingPoints?: boolean\n    excludeAdjacent?: boolean\n    startingPoints: RoomPosition[]\n    terrainArray: TerrainTypeArray | []\n}\n\nexport const singleSourceShortestPaths = ({\n    excludeStartingPoints = false,\n    excludeAdjacent = false,\n    startingPoints,\n    terrainArray\n}: SingleSourceShortestPathParams): Position[] => {\n    const terrainDistances: TerrainDistanceArray[] = startingPoints.map(start => floodfillDistances(terrainArray, start))\n    const terrainDistanceSum: TerrainDistanceArray = terrainDistances.reduce<TerrainDistanceArray>(function (distancesSum: TerrainDistanceArray, terrainDistance: TerrainDistanceArray): TerrainDistanceArray {\n        return distancesSum.map<number>((value, index) => {\n            return value + terrainDistance[index]\n        }) as TerrainDistanceArray\n    }, new Array(ROOM_GRID_COUNT).fill(0) as TerrainDistanceArray)\n\n    const minimumSumDistance = Math.min(...terrainDistanceSum)\n\n    const excludedIndices: Set<number> = startingPoints.reduce<Set<number>>((set, startPos) => {\n        const startIndex = convertPositionToTerrainIndex(startPos)\n        excludeStartingPoints && set.add(startIndex)\n\n        if(excludeAdjacent) {\n            const adjacentPositions = findFreeAdjacentPositions({\n                roomPosition: new RoomPosition(startPos.x, startPos.y, startPos.roomName),\n                terrainArray\n            })\n\n            adjacentPositions.map(pos => convertPositionToTerrainIndex(pos)).forEach(index => {\n                set.add(index)\n            })\n        }\n\n        return set\n    }, new Set<number>())\n\n    // Return all positions with minimumSumDistance and not excluded\n    const optimumSpawnLocationIndices = terrainDistanceSum\n        .map((distance, index) => ({ distance, index }))\n        .filter(({ distance, index }) => distance === minimumSumDistance && !excludedIndices.has(index))\n        .map(({ index }) => index)\n\n    return optimumSpawnLocationIndices.map(convertTerrainIndexToPosition)\n}\n\nconst floodfillDistances = (terrainArray: TerrainTypeArray, start: Position): TerrainDistanceArray => {\n    const distances: number[] = new Array(ROOM_GRID_COUNT).fill(Infinity) as TerrainDistanceArray\n    const queue: Position [] = []\n    const startIndex = convertPositionToTerrainIndex(start)\n    distances[startIndex] = 0\n    queue.push(start)\n\n    while (queue.length > 0) {\n        const currentPosition = queue.shift()!\n        const currentIndex = convertPositionToTerrainIndex(currentPosition)\n\n        const currentDistance = distances[currentIndex]\n        const currentTerrainType = terrainArray[currentIndex]\n\n        for (let dx = -1; dx <= 1; dx++) {\n            for (let dy = -1; dy <= 1; dy++) {\n                if (dx === 0 && dy === 0) continue // Skip the current position\n\n                const nx = currentPosition.x + dx\n                const ny = currentPosition.y + dy\n\n                if (nx < 0 || nx >= ROOM_SIZE || ny < 0 || ny >= ROOM_SIZE) continue // Out of bounds\n\n                const neighborIndex = convertPositionToTerrainIndex({ x: nx, y: ny })\n                const neighbourTerrainType = terrainArray[neighborIndex]\n\n                // NOTE: The neighbour terrain must not be a wall\n                if (neighbourTerrainType === TERRAIN_MASK_WALL) continue // Skip walls\n\n                // NOTE: The current terrain is used to determine the weight of the path\n                const newDistance = currentDistance + TERRAIN_WEIGHTS[currentTerrainType]\n\n                // NOTE: If the neighbour hasn't been visited, add it to the queue\n                if(distances[neighborIndex] === Infinity) {\n                    queue.push({ x: nx, y: ny })\n                }\n\n                // NOTE: If the new distance is less than the current distance, update it\n                // This ensures that we always have the shortest path to each position\n                if (newDistance < distances[neighborIndex]) {\n                    distances[neighborIndex] = newDistance\n                }\n            }\n        }\n    }\n\n    return distances as TerrainDistanceArray\n}\n\nconst SWAMP_WEIGHT = 5\nconst PLAIN_WEIGHT = 1\nconst WALL_WEIGHT = Infinity\n\nconst TERRAIN_WEIGHTS: Record<TERRAIN_MASK_PLAIN | TERRAIN_MASK_WALL | TERRAIN_MASK_SWAMP, number> = [\n    PLAIN_WEIGHT, // TERRAIN_MASK_PLAIN\n    WALL_WEIGHT,  // TERRAIN_MASK_WALL\n    SWAMP_WEIGHT, // TERRAIN_MASK_SWAMP\n]"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dbe8eaa32789db7574dc21e2766a7f466140040b","contentHash":"3d82f505eae67ff706623971cee3838c6a5b7f31aa674b82469aefaf0a6a7a7f"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/initialiseMemory.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/initialiseMemory.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":25},"end":{"line":19,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":23}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":22}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":31}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":29}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":36}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":22}},"11":{"start":{"line":13,"column":4},"end":{"line":13,"column":23}},"12":{"start":{"line":14,"column":4},"end":{"line":18,"column":6}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":25},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":31},"end":{"line":19,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":1},"f":{"0":4},"b":{},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/initialiseMemory.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/initialiseMemory.ts"],"names":[],"mappings":";;;AAAO,MAAM,gBAAgB,GAAG,GAAG,EAAE;IACjC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAA;IAClB,MAAM,CAAC,uBAAuB,GAAG,KAAK,CAAA;IACtC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAA;IACjB,MAAM,CAAC,cAAc,GAAG,EAAE,CAAA;IAC1B,MAAM,CAAC,YAAY,GAAG,EAAE,CAAA;IACxB,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAA;IAC/B,MAAM,CAAC,WAAW,GAAG,EAAE,CAAA;IACvB,MAAM,CAAC,KAAK,GAAG,EAAE,CAAA;IACjB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAA;IAClB,MAAM,CAAC,MAAM,GAAG;QACZ,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAE;QAChE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAE;QAC/D,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAE;KAC9D,CAAA;AACL,CAAC,CAAA;AAfY,QAAA,gBAAgB,oBAe5B","sourcesContent":["export const initialiseMemory = () => {\n    Memory.creeps = {}\n    Memory.initialCalculationsDone = false\n    Memory.flags = {}\n    Memory.mapConnections = []\n    Memory.mapRoomGraph = {}\n    Memory.memoryInitialised = true\n    Memory.powerCreeps = {}\n    Memory.rooms = {}\n    Memory.spawns = {}\n    Memory.queues = {\n        evaluations: { head: null, tail: null, rankedQueue: [{},{},{}] },\n        structures: { head: null, tail: null, rankedQueue: [{},{},{}] },\n        creeps: { head: null, tail: null, rankedQueue: [{},{},{}] }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"988d2af59c7079dcdd8a0033472f215750b929b5","contentHash":"412986ce6f50cf0ab59ab548f7fcf97d6a9cede15417db743229adb62bd08841"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/main.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/main.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":31},"end":{"line":4,"column":62}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":35},"end":{"line":6,"column":70}},"5":{"start":{"line":7,"column":31},"end":{"line":7,"column":62}},"6":{"start":{"line":8,"column":27},"end":{"line":8,"column":54}},"7":{"start":{"line":9,"column":22},"end":{"line":9,"column":44}},"8":{"start":{"line":10,"column":22},"end":{"line":10,"column":50}},"9":{"start":{"line":11,"column":0},"end":{"line":45,"column":3}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":55}},"11":{"start":{"line":13,"column":32},"end":{"line":13,"column":56}},"12":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":51}},"14":{"start":{"line":17,"column":4},"end":{"line":26,"column":5}},"15":{"start":{"line":18,"column":8},"end":{"line":18,"column":59}},"16":{"start":{"line":19,"column":33},"end":{"line":19,"column":59}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":59}},"18":{"start":{"line":21,"column":8},"end":{"line":21,"column":83}},"19":{"start":{"line":22,"column":8},"end":{"line":22,"column":46}},"20":{"start":{"line":25,"column":8},"end":{"line":25,"column":59}},"21":{"start":{"line":27,"column":4},"end":{"line":27,"column":37}},"22":{"start":{"line":40,"column":4},"end":{"line":44,"column":5}},"23":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":50},"end":{"line":11,"column":51}},"loc":{"start":{"line":11,"column":56},"end":{"line":45,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":4},"end":{"line":16,"column":5}}],"line":14},"1":{"loc":{"start":{"line":17,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":26,"column":5}},{"start":{"line":17,"column":4},"end":{"line":26,"column":5}}],"line":17},"2":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":5,"11":5,"12":5,"13":3,"14":5,"15":3,"16":3,"17":3,"18":3,"19":3,"20":2,"21":5,"22":5,"23":2,"24":1},"f":{"0":5},"b":{"0":[3,2],"1":[3,2],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/main.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/main.ts"],"names":[],"mappings":";;;AAAA,+DAA2D;AAC3D,+CAA4D;AAC5D,uEAAmE;AACnE,+DAA2D;AAC3D,uDAAmD;AACnD,6CAAyC;AACzC,mDAA+C;AAElC,QAAA,IAAI,GAAG,yBAAW,CAAC,QAAQ,CAAC,GAAG,EAAE;IAC5C,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;IAElD,MAAM,mBAAmB,GAAG,MAAM,CAAC,iBAAiB,CAAA;IAEpD,IAAI,CAAC,mBAAmB,EAAE;QACxB,IAAA,mCAAgB,GAAE,CAAA;KACnB;IAED,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE;QACnC,IAAA,2CAAoB,GAAE,CAAA;QAEtB,MAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QACnD,IAAA,2BAAa,EAAC,gBAAgB,CAAC,CAAA;QAC/B,IAAA,mDAAwB,EAAC,gBAAgB,CAAC,CAAA;QAE1C,MAAM,CAAC,uBAAuB,GAAG,IAAI,CAAA;KACtC;SAAM;QACL,IAAA,2CAAoB,GAAE,CAAA;KACvB;IAED,IAAA,yBAAW,GAAE,CAAA;IAEb,2BAA2B;IAC3B,2EAA2E;IAE3E,mBAAmB;IACnB,4GAA4G;IAC5G,mCAAmC;IACnC,+BAA+B;IAC/B,0BAA0B;IAC1B,+BAA+B;IAC/B,oCAAoC;IAEpC,uGAAuG;IACvG,iFAAiF;IAEjF,gDAAgD;IAChD,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;QAChC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;YAC1B,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;SAC3B;KACF;AACH,CAAC,CAAC,CAAA","sourcesContent":["import { createMapConnections } from \"createMapConnections\"\nimport { evaluateRoom as roomValuation } from \"evaluateRoom\"\nimport { generateRoomTasksOnSpawn } from \"generateRoomTasksOnSpawn\"\nimport { renderMapConnections } from \"renderMapConnections\"\nimport { initialiseMemory } from \"initialiseMemory\"\nimport { spawnCreeps } from \"spawnCreeps\"\nimport { ErrorMapper } from \"utils/ErrorMapper\"\n\nexport const loop = ErrorMapper.wrapLoop(() => {\n  console.log(`\\nCurrent game tick is ${Game.time}`)\n\n  const memoryIsInitialised = Memory.memoryInitialised\n\n  if (!memoryIsInitialised) {\n    initialiseMemory()\n  }\n\n  if (!Memory.initialCalculationsDone) {\n    createMapConnections()\n\n    const startingRoomName = Object.keys(Game.rooms)[0]\n    roomValuation(startingRoomName)\n    generateRoomTasksOnSpawn(startingRoomName)\n\n    Memory.initialCalculationsDone = true\n  } else {\n    renderMapConnections()\n  }\n\n  spawnCreeps()\n\n  // Initial map calculations\n  // - Add rooms for evaluation to the evaluation queue as low priority tasks\n\n  // Evaluate Threats\n  // Identify threats in perimeter rooms and in newly scouted rooms with a period of 10 ticks since last check\n  // Evaluate current structure needs\n  // Evaluate current creep needs\n  // Add items to Task Queue\n  // Process structure behaviours\n  // Process existing creeps behaviour\n\n  // Analyse new rooms and evaluate their potential for direction-dependent remote gathering or expansion\n  // Analyse existing rooms when all connections have complete internal evaluations\n\n  // Automatically delete memory of missing creeps\n  for (const name in Memory.creeps) {\n    if (!(name in Game.creeps)) {\n      delete Memory.creeps[name]\n    }\n  }\n})\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df49f35c822f5eb7816d92818ce94ac186e32d95","contentHash":"2387e9897c0587013750a8e37b2b025f7a7d27df303f2a37a353a192782bb766"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/renderMapConnections.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/renderMapConnections.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":22}},"3":{"start":{"line":5,"column":29},"end":{"line":12,"column":1}},"4":{"start":{"line":7,"column":24},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":4},"end":{"line":11,"column":5}},"6":{"start":{"line":9,"column":43},"end":{"line":9,"column":64}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":342}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":29},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":35},"end":{"line":12,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":24},"end":{"line":7,"column":51}},"type":"binary-expr","locations":[{"start":{"line":7,"column":24},"end":{"line":7,"column":45}},{"start":{"line":7,"column":49},"end":{"line":7,"column":51}}],"line":7},"1":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":341}},"type":"cond-expr","locations":[{"start":{"line":10,"column":150},"end":{"line":10,"column":156}},{"start":{"line":10,"column":159},"end":{"line":10,"column":341}}],"line":10},"2":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":147}},"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":130}},{"start":{"line":10,"column":134},"end":{"line":10,"column":147}}],"line":10},"3":{"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":120}},"type":"cond-expr","locations":[{"start":{"line":10,"column":102},"end":{"line":10,"column":108}},{"start":{"line":10,"column":111},"end":{"line":10,"column":120}}],"line":10},"4":{"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":99}},"type":"binary-expr","locations":[{"start":{"line":10,"column":14},"end":{"line":10,"column":82}},{"start":{"line":10,"column":86},"end":{"line":10,"column":99}}],"line":10},"5":{"loc":{"start":{"line":10,"column":20},"end":{"line":10,"column":72}},"type":"cond-expr","locations":[{"start":{"line":10,"column":55},"end":{"line":10,"column":61}},{"start":{"line":10,"column":64},"end":{"line":10,"column":72}}],"line":10},"6":{"loc":{"start":{"line":10,"column":20},"end":{"line":10,"column":52}},"type":"binary-expr","locations":[{"start":{"line":10,"column":20},"end":{"line":10,"column":33}},{"start":{"line":10,"column":37},"end":{"line":10,"column":52}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":4,"6":10,"7":10,"8":1},"f":{"0":4},"b":{"0":[4,0],"1":[8,2],"2":[10,10],"3":[0,10],"4":[10,10],"5":[0,10],"6":[10,10]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/renderMapConnections.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/renderMapConnections.ts"],"names":[],"mappings":";;;AAAA,MAAM,WAAW,GAAG,EAAE,CAAA;AAEf,MAAM,oBAAoB,GAAG,GAAG,EAAE;;IACrC,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,IAAI,EAAE,CAAA;IAE/C,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;QAClC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAExD,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,0CAAE,MAAM,0CAAE,IAAI,CACnB,IAAI,YAAY,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,EACvD,IAAI,YAAY,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,EACvD,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAC9D,CAAA;KACJ;AACL,CAAC,CAAA;AAZY,QAAA,oBAAoB,wBAYhC","sourcesContent":["const CENTRE_TILE = 25\n\nexport const renderMapConnections = () => {\n    const connections = Memory.mapConnections || []\n\n    for (const connection of connections) {\n        const [roomNameOne, roomNameTwo] = connection.split(\"-\")\n\n        Game?.map?.visual?.line(\n            new RoomPosition(CENTRE_TILE, CENTRE_TILE, roomNameOne),\n            new RoomPosition(CENTRE_TILE, CENTRE_TILE, roomNameTwo),\n            { color: '#fff', width: 1, lineStyle: 'solid', opacity: 1 }\n        )\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a0bb1d814bdf3bdcfdca62fc486defd6e6010ee9","contentHash":"38480d1855f7b5ad7367b962c11af0cdd20a511dced4212cad4c250aa1f50d8f"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/spawnCreeps.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/spawnCreeps.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":20},"end":{"line":96,"column":1}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":4},"end":{"line":95,"column":5}},"5":{"start":{"line":7,"column":31},"end":{"line":7,"column":33}},"6":{"start":{"line":8,"column":21},"end":{"line":8,"column":36}},"7":{"start":{"line":9,"column":27},"end":{"line":9,"column":49}},"8":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":86}},"10":{"start":{"line":12,"column":12},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":8},"end":{"line":17,"column":9}},"12":{"start":{"line":15,"column":12},"end":{"line":15,"column":82}},"13":{"start":{"line":16,"column":12},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":26},"end":{"line":18,"column":42}},"15":{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},"16":{"start":{"line":20,"column":12},"end":{"line":20,"column":81}},"17":{"start":{"line":21,"column":12},"end":{"line":21,"column":21}},"18":{"start":{"line":23,"column":29},"end":{"line":23,"column":46}},"19":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"20":{"start":{"line":25,"column":12},"end":{"line":25,"column":89}},"21":{"start":{"line":26,"column":12},"end":{"line":26,"column":21}},"22":{"start":{"line":28,"column":8},"end":{"line":68,"column":9}},"23":{"start":{"line":29,"column":38},"end":{"line":29,"column":133}},"24":{"start":{"line":29,"column":106},"end":{"line":29,"column":129}},"25":{"start":{"line":30,"column":38},"end":{"line":30,"column":67}},"26":{"start":{"line":31,"column":44},"end":{"line":31,"column":81}},"27":{"start":{"line":32,"column":42},"end":{"line":32,"column":125}},"28":{"start":{"line":33,"column":12},"end":{"line":38,"column":19}},"29":{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},"30":{"start":{"line":35,"column":20},"end":{"line":35,"column":76}},"31":{"start":{"line":37,"column":16},"end":{"line":37,"column":27}},"32":{"start":{"line":39,"column":37},"end":{"line":39,"column":78}},"33":{"start":{"line":40,"column":36},"end":{"line":40,"column":90}},"34":{"start":{"line":41,"column":42},"end":{"line":41,"column":77}},"35":{"start":{"line":42,"column":12},"end":{"line":42,"column":339}},"36":{"start":{"line":43,"column":12},"end":{"line":67,"column":13}},"37":{"start":{"line":44,"column":43},"end":{"line":44,"column":129}},"38":{"start":{"line":45,"column":16},"end":{"line":66,"column":17}},"39":{"start":{"line":46,"column":41},"end":{"line":46,"column":180}},"40":{"start":{"line":46,"column":116},"end":{"line":46,"column":177}},"41":{"start":{"line":47,"column":20},"end":{"line":50,"column":21}},"42":{"start":{"line":48,"column":24},"end":{"line":48,"column":145}},"43":{"start":{"line":49,"column":24},"end":{"line":49,"column":30}},"44":{"start":{"line":51,"column":20},"end":{"line":51,"column":57}},"45":{"start":{"line":52,"column":38},"end":{"line":52,"column":86}},"46":{"start":{"line":53,"column":20},"end":{"line":62,"column":23}},"47":{"start":{"line":63,"column":20},"end":{"line":65,"column":22}},"48":{"start":{"line":69,"column":28},"end":{"line":69,"column":45}},"49":{"start":{"line":70,"column":8},"end":{"line":73,"column":9}},"50":{"start":{"line":71,"column":12},"end":{"line":71,"column":88}},"51":{"start":{"line":72,"column":12},"end":{"line":72,"column":21}},"52":{"start":{"line":74,"column":8},"end":{"line":94,"column":9}},"53":{"start":{"line":75,"column":31},"end":{"line":75,"column":46}},"54":{"start":{"line":76,"column":12},"end":{"line":77,"column":25}},"55":{"start":{"line":77,"column":16},"end":{"line":77,"column":25}},"56":{"start":{"line":78,"column":33},"end":{"line":78,"column":168}},"57":{"start":{"line":78,"column":104},"end":{"line":78,"column":165}},"58":{"start":{"line":79,"column":12},"end":{"line":82,"column":13}},"59":{"start":{"line":80,"column":16},"end":{"line":80,"column":111}},"60":{"start":{"line":81,"column":16},"end":{"line":81,"column":25}},"61":{"start":{"line":83,"column":12},"end":{"line":93,"column":15}},"62":{"start":{"line":97,"column":0},"end":{"line":97,"column":34}},"63":{"start":{"line":99,"column":16},"end":{"line":99,"column":31}},"64":{"start":{"line":100,"column":4},"end":{"line":100,"column":48}},"65":{"start":{"line":100,"column":33},"end":{"line":100,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":20},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":26},"end":{"line":96,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":88},"end":{"line":29,"column":89}},"loc":{"start":{"line":29,"column":106},"end":{"line":29,"column":129}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":71},"end":{"line":33,"column":72}},"loc":{"start":{"line":33,"column":91},"end":{"line":38,"column":13}},"line":33},"3":{"name":"(anonymous_3)","decl":{"start":{"line":46,"column":105},"end":{"line":46,"column":106}},"loc":{"start":{"line":46,"column":116},"end":{"line":46,"column":177}},"line":46},"4":{"name":"(anonymous_4)","decl":{"start":{"line":78,"column":93},"end":{"line":78,"column":94}},"loc":{"start":{"line":78,"column":104},"end":{"line":78,"column":165}},"line":78},"5":{"name":"getIntersection","decl":{"start":{"line":98,"column":9},"end":{"line":98,"column":24}},"loc":{"start":{"line":98,"column":41},"end":{"line":101,"column":1}},"line":98},"6":{"name":"(anonymous_6)","decl":{"start":{"line":100,"column":25},"end":{"line":100,"column":26}},"loc":{"start":{"line":100,"column":33},"end":{"line":100,"column":46}},"line":100}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":13,"column":9}},{"start":{"line":10,"column":8},"end":{"line":13,"column":9}}],"line":10},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":17,"column":9}},{"start":{"line":14,"column":8},"end":{"line":17,"column":9}}],"line":14},"2":{"loc":{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},{"start":{"line":19,"column":8},"end":{"line":22,"column":9}}],"line":19},"3":{"loc":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},{"start":{"line":24,"column":8},"end":{"line":27,"column":9}}],"line":24},"4":{"loc":{"start":{"line":24,"column":12},"end":{"line":24,"column":57}},"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":25}},{"start":{"line":24,"column":29},"end":{"line":24,"column":57}}],"line":24},"5":{"loc":{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},"type":"if","locations":[{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},{"start":{"line":34,"column":16},"end":{"line":36,"column":17}}],"line":34},"6":{"loc":{"start":{"line":41,"column":42},"end":{"line":41,"column":77}},"type":"binary-expr","locations":[{"start":{"line":41,"column":42},"end":{"line":41,"column":58}},{"start":{"line":41,"column":62},"end":{"line":41,"column":77}}],"line":41},"7":{"loc":{"start":{"line":43,"column":12},"end":{"line":67,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":67,"column":13}},{"start":{"line":43,"column":12},"end":{"line":67,"column":13}}],"line":43},"8":{"loc":{"start":{"line":45,"column":16},"end":{"line":66,"column":17}},"type":"if","locations":[{"start":{"line":45,"column":16},"end":{"line":66,"column":17}},{"start":{"line":45,"column":16},"end":{"line":66,"column":17}}],"line":45},"9":{"loc":{"start":{"line":46,"column":116},"end":{"line":46,"column":177}},"type":"binary-expr","locations":[{"start":{"line":46,"column":116},"end":{"line":46,"column":139}},{"start":{"line":46,"column":143},"end":{"line":46,"column":177}}],"line":46},"10":{"loc":{"start":{"line":47,"column":20},"end":{"line":50,"column":21}},"type":"if","locations":[{"start":{"line":47,"column":20},"end":{"line":50,"column":21}},{"start":{"line":47,"column":20},"end":{"line":50,"column":21}}],"line":47},"11":{"loc":{"start":{"line":53,"column":20},"end":{"line":62,"column":22}},"type":"cond-expr","locations":[{"start":{"line":53,"column":71},"end":{"line":53,"column":77}},{"start":{"line":53,"column":80},"end":{"line":62,"column":22}}],"line":53},"12":{"loc":{"start":{"line":53,"column":20},"end":{"line":53,"column":68}},"type":"binary-expr","locations":[{"start":{"line":53,"column":20},"end":{"line":53,"column":41}},{"start":{"line":53,"column":45},"end":{"line":53,"column":68}}],"line":53},"13":{"loc":{"start":{"line":70,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":73,"column":9}},{"start":{"line":70,"column":8},"end":{"line":73,"column":9}}],"line":70},"14":{"loc":{"start":{"line":70,"column":12},"end":{"line":70,"column":88}},"type":"binary-expr","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":24}},{"start":{"line":70,"column":28},"end":{"line":70,"column":53}},{"start":{"line":70,"column":57},"end":{"line":70,"column":88}}],"line":70},"15":{"loc":{"start":{"line":74,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":94,"column":9}},{"start":{"line":74,"column":8},"end":{"line":94,"column":9}}],"line":74},"16":{"loc":{"start":{"line":76,"column":12},"end":{"line":77,"column":25}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":77,"column":25}},{"start":{"line":76,"column":12},"end":{"line":77,"column":25}}],"line":76},"17":{"loc":{"start":{"line":78,"column":104},"end":{"line":78,"column":165}},"type":"binary-expr","locations":[{"start":{"line":78,"column":104},"end":{"line":78,"column":127}},{"start":{"line":78,"column":131},"end":{"line":78,"column":165}}],"line":78},"18":{"loc":{"start":{"line":79,"column":12},"end":{"line":82,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":82,"column":13}},{"start":{"line":79,"column":12},"end":{"line":82,"column":13}}],"line":79}},"s":{"0":1,"1":1,"2":1,"3":9,"4":9,"5":8,"6":8,"7":8,"8":8,"9":0,"10":0,"11":8,"12":5,"13":5,"14":3,"15":3,"16":1,"17":1,"18":2,"19":2,"20":0,"21":0,"22":2,"23":1,"24":0,"25":1,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":0,"41":1,"42":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1,"64":1,"65":0},"f":{"0":9,"1":0,"2":0,"3":0,"4":0,"5":1,"6":0},"b":{"0":[0,8],"1":[5,3],"2":[1,2],"3":[0,2],"4":[2,2],"5":[0,0],"6":[1,1],"7":[1,0],"8":[1,0],"9":[0,0],"10":[1,0],"11":[0,0],"12":[0,0],"13":[1,1],"14":[2,1,1],"15":[1,0],"16":[1,0],"17":[0,0],"18":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/spawnCreeps.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/spawnCreeps.ts"],"names":[],"mappings":"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","sourcesContent":["import { ReservingCreeps } from \"types\"\n\nexport const spawnCreeps = () => {\n    const rooms = Game.rooms\n\n    for (const roomName in rooms) {\n        const spawnsReserved: string[] = []\n        const room = rooms[roomName]\n        const roomMemory = Memory.rooms[roomName]\n\n        if(!room) {\n            console.log(`SpawnCreepsError: Room ${roomName} not found in Game.rooms`)\n            continue\n        }\n\n        if (!roomMemory) {\n            console.log(`SpawnCreepsError: No memory found for room ${roomName}`)\n            continue\n        }\n\n        const roomTasks = roomMemory.tasks\n\n        if (!roomTasks) {\n            console.log(`SpawnCreepsDebug: No tasks found for room ${roomName}`)\n            continue\n        }\n\n        const harvestTasks = roomTasks.harvest\n        if (!harvestTasks || !Array.isArray(harvestTasks)) {\n            console.log(`SpawnCreepsDebug: No harvest tasks found for room ${roomName}`)\n            continue\n        }\n\n        for (const harvestTask of harvestTasks) {\n            const reservedWorkParts = Object.values(harvestTask.reservingCreeps).reduce((total,creep) => total+creep.workParts,0)\n            const requiredWorkParts = harvestTask.requiredWorkParts\n            const availablePositionsCount = harvestTask.availablePositions.length\n\n            const livingReservingCreeps = getIntersection(\n                Object.keys(harvestTask.reservingCreeps),\n                Object.keys(Game.creeps)\n            )\n\n            harvestTask.reservingCreeps = livingReservingCreeps.reduce<ReservingCreeps>((acc, creepName) => {\n                if(livingReservingCreeps.includes(creepName)) {\n                    acc[creepName] = harvestTask.reservingCreeps[creepName]\n                }\n                return acc\n            }, {})\n\n\n            const workersAreNeeded = requiredWorkParts - reservedWorkParts > 0\n            const roomIsAvailable = livingReservingCreeps.length < availablePositionsCount\n\n            const shouldSpawnHarvesters = workersAreNeeded && roomIsAvailable\n\n            console.log(`SpawnCreepsDebug: Room ${roomName} - Harvest Task ${harvestTask.sourceId}: Workers Needed: ${workersAreNeeded}, Room Available: ${roomIsAvailable}, Should Spawn: ${shouldSpawnHarvesters}, Available Positions: ${availablePositionsCount}, Reserved Count: ${reservedWorkParts}, Required Count: ${requiredWorkParts}`)\n\n            if (shouldSpawnHarvesters) {\n                const sourceRoomPosition = new RoomPosition(harvestTask.sourcePosition.x, harvestTask.sourcePosition.y, roomName)\n                if (sourceRoomPosition) {\n                    const nearestSpawn = sourceRoomPosition.findClosestByRange(FIND_MY_SPAWNS, { filter: (spawn) => spawn.spawning === null && !spawnsReserved.includes(spawn.id) })\n\n                    if (!nearestSpawn) {\n                        console.log(`SpawnCreepsDebug: No available spawn found for harvest task '${harvestTask.sourceId}' in room ${roomName}`)\n                        break\n                    }\n                    spawnsReserved.push(nearestSpawn.id)\n\n                    const creepName = `Harvester-${harvestTask.sourceId}-${Game.time}`\n                    nearestSpawn?.spawnCreep(\n                        [WORK, CARRY, MOVE],\n                        creepName,\n                        {\n                            memory: {\n                                task: {\n                                    type: \"harvest\",\n                                    taskId: `${harvestTask.roomName}-${harvestTask.sourceId}`,\n                                    sourceId: harvestTask.sourceId,\n                                    sourcePosition: harvestTask.sourcePosition,\n                                }\n                            }\n                        }\n                    )\n                    harvestTask.reservingCreeps[creepName] = {\n                        workParts: 1\n                    }\n                }\n            }\n        }\n\n        const upgradeTask = roomTasks.upgrade\n\n        if (!upgradeTask || !upgradeTask.controllerId || !upgradeTask.controllerPosition) {\n            console.log(`SpawnCreepsDebug: No upgrade task found for room ${roomName}`)\n            continue\n        }\n\n        if (upgradeTask) {\n            const controller = room.controller\n\n            if(!controller) continue\n\n            const nearestSpawn = controller.pos.findClosestByRange(FIND_MY_SPAWNS, { filter: (spawn) => spawn.spawning === null && !spawnsReserved.includes(spawn.id) })\n            if (!nearestSpawn) {\n                console.log(`SpawnCreepsDebug: No available spawn found for upgrade task in room ${roomName}`)\n                continue\n            }\n\n            nearestSpawn.spawnCreep(\n                [WORK, CARRY, MOVE],\n                `Upgrader-${upgradeTask.controllerId}-${Game.time}`,\n                {\n                    memory: {\n                        task: {\n                            type: \"upgrade\",\n                            taskId: `${upgradeTask.roomName}-${upgradeTask.controllerId}`,\n                            controllerId: upgradeTask.controllerId,\n                            controllerPosition: upgradeTask.controllerPosition,\n                            workParts: 1\n                        }\n                    }\n                }\n            )\n        }\n    }\n}\n\n\nfunction getIntersection(array1: string[], array2: string[]): string[] {\n  const set = new Set(array2);\n  return array1.filter(item => set.has(item));\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d65e569fc85e12d82f6f64ef05466f9d0cff1782","contentHash":"53aec4ad8ea917af29237888d1180f09f462506342613623ae6a2b88a850e234"},"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/utils/ErrorMapper.ts":{"path":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/utils/ErrorMapper.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}},"4":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":88}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":30}},"7":{"start":{"line":23,"column":22},"end":{"line":23,"column":66}},"8":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"9":{"start":{"line":25,"column":12},"end":{"line":25,"column":37}},"10":{"start":{"line":28,"column":19},"end":{"line":28,"column":76}},"11":{"start":{"line":30,"column":23},"end":{"line":30,"column":39}},"12":{"start":{"line":31,"column":8},"end":{"line":61,"column":9}},"13":{"start":{"line":32,"column":12},"end":{"line":60,"column":13}},"14":{"start":{"line":33,"column":28},"end":{"line":36,"column":18}},"15":{"start":{"line":37,"column":16},"end":{"line":55,"column":17}},"16":{"start":{"line":38,"column":20},"end":{"line":50,"column":21}},"17":{"start":{"line":39,"column":24},"end":{"line":39,"column":101}},"18":{"start":{"line":42,"column":24},"end":{"line":49,"column":25}},"19":{"start":{"line":44,"column":28},"end":{"line":44,"column":105}},"20":{"start":{"line":48,"column":28},"end":{"line":48,"column":91}},"21":{"start":{"line":54,"column":20},"end":{"line":54,"column":26}},"22":{"start":{"line":59,"column":16},"end":{"line":59,"column":22}},"23":{"start":{"line":62,"column":8},"end":{"line":62,"column":37}},"24":{"start":{"line":63,"column":8},"end":{"line":63,"column":24}},"25":{"start":{"line":66,"column":8},"end":{"line":85,"column":10}},"26":{"start":{"line":67,"column":12},"end":{"line":84,"column":13}},"27":{"start":{"line":68,"column":16},"end":{"line":68,"column":23}},"28":{"start":{"line":71,"column":16},"end":{"line":83,"column":17}},"29":{"start":{"line":72,"column":20},"end":{"line":78,"column":21}},"30":{"start":{"line":73,"column":40},"end":{"line":73,"column":109}},"31":{"start":{"line":74,"column":24},"end":{"line":74,"column":117}},"32":{"start":{"line":77,"column":24},"end":{"line":77,"column":126}},"33":{"start":{"line":82,"column":20},"end":{"line":82,"column":28}},"34":{"start":{"line":88,"column":0},"end":{"line":88,"column":34}},"35":{"start":{"line":90,"column":0},"end":{"line":90,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":26},"end":{"line":12,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":41},"end":{"line":64,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":26},"end":{"line":86,"column":5}},"line":65},"3":{"name":"(anonymous_3)","decl":{"start":{"line":66,"column":15},"end":{"line":66,"column":16}},"loc":{"start":{"line":66,"column":21},"end":{"line":85,"column":9}},"line":66}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},{"start":{"line":8,"column":8},"end":{"line":10,"column":9}}],"line":8},"1":{"loc":{"start":{"line":23,"column":22},"end":{"line":23,"column":66}},"type":"cond-expr","locations":[{"start":{"line":23,"column":47},"end":{"line":23,"column":58}},{"start":{"line":23,"column":61},"end":{"line":23,"column":66}}],"line":23},"2":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"3":{"loc":{"start":{"line":32,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":60,"column":13}},{"start":{"line":32,"column":12},"end":{"line":60,"column":13}}],"line":32},"4":{"loc":{"start":{"line":37,"column":16},"end":{"line":55,"column":17}},"type":"if","locations":[{"start":{"line":37,"column":16},"end":{"line":55,"column":17}},{"start":{"line":37,"column":16},"end":{"line":55,"column":17}}],"line":37},"5":{"loc":{"start":{"line":38,"column":20},"end":{"line":50,"column":21}},"type":"if","locations":[{"start":{"line":38,"column":20},"end":{"line":50,"column":21}},{"start":{"line":38,"column":20},"end":{"line":50,"column":21}}],"line":38},"6":{"loc":{"start":{"line":42,"column":24},"end":{"line":49,"column":25}},"type":"if","locations":[{"start":{"line":42,"column":24},"end":{"line":49,"column":25}},{"start":{"line":42,"column":24},"end":{"line":49,"column":25}}],"line":42},"7":{"loc":{"start":{"line":71,"column":16},"end":{"line":83,"column":17}},"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":83,"column":17}},{"start":{"line":71,"column":16},"end":{"line":83,"column":17}}],"line":71},"8":{"loc":{"start":{"line":72,"column":20},"end":{"line":78,"column":21}},"type":"if","locations":[{"start":{"line":72,"column":20},"end":{"line":78,"column":21}},{"start":{"line":72,"column":20},"end":{"line":78,"column":21}}],"line":72}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":5,"27":5,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1},"f":{"0":0,"1":0,"2":1,"3":5},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/utils/ErrorMapper.ts","sources":["/Users/churt/Library/Application Support/Screeps/scripts/127_0_0_1___21025/Screeps2025/src/utils/ErrorMapper.ts"],"names":[],"mappings":"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","sourcesContent":["import { SourceMapConsumer } from \"source-map\";\nimport { escape } from \"lodash\";\nexport class ErrorMapper {\n  // Cache consumer\n  private static _consumer?: SourceMapConsumer;\n\n  public static get consumer(): SourceMapConsumer {\n    if (this._consumer == null) {\n      this._consumer = new SourceMapConsumer(require(\"main.js.map\"));\n    }\n\n    return this._consumer;\n  }\n\n  // Cache previously mapped traces to improve performance\n  public static cache: { [key: string]: string } = {};\n\n  /**\n   * Generates a stack trace using a source map generate original symbol names.\n   *\n   * WARNING - EXTREMELY high CPU cost for first call after reset - >30 CPU! Use sparingly!\n   * (Consecutive calls after a reset are more reasonable, ~0.1 CPU/ea)\n   *\n   * @param {Error | string} error The error or original stack trace\n   * @returns {string} The source-mapped stack trace\n   */\n  public static sourceMappedStackTrace(error: Error | string): string {\n    const stack: string = error instanceof Error ? (error.stack as string) : error;\n    if (Object.prototype.hasOwnProperty.call(this.cache, stack)) {\n      return this.cache[stack];\n    }\n\n    // eslint-disable-next-line no-useless-escape\n    const re = /^\\s+at\\s+(.+?\\s+)?\\(?([0-z._\\-\\\\\\/]+):(\\d+):(\\d+)\\)?$/gm;\n    let match: RegExpExecArray | null;\n    let outStack = error.toString();\n\n    while ((match = re.exec(stack))) {\n      if (match[2] === \"main\") {\n        const pos = this.consumer.originalPositionFor({\n          column: parseInt(match[4], 10),\n          line: parseInt(match[3], 10)\n        });\n\n        if (pos.line != null) {\n          if (pos.name) {\n            outStack += `\\n    at ${pos.name} (${pos.source}:${pos.line}:${pos.column})`;\n          } else {\n            if (match[1]) {\n              // no original source file name known - use file name from given trace\n              outStack += `\\n    at ${match[1]} (${pos.source}:${pos.line}:${pos.column})`;\n            } else {\n              // no original source file name known or in given trace - omit name\n              outStack += `\\n    at ${pos.source}:${pos.line}:${pos.column}`;\n            }\n          }\n        } else {\n          // no known position\n          break;\n        }\n      } else {\n        // no more parseable lines\n        break;\n      }\n    }\n\n    this.cache[stack] = outStack;\n    return outStack;\n  }\n\n  public static wrapLoop(loop: () => void): () => void {\n    return () => {\n      try {\n        loop();\n      } catch (e) {\n        if (e instanceof Error) {\n          if (\"sim\" in Game.rooms) {\n            const message = `Source maps don't work in the simulator - displaying original error`;\n            console.log(`<span style='color:red'>${message}<br>${escape(e.stack)}</span>`);\n          } else {\n            console.log(`<span style='color:red'>${escape(this.sourceMappedStackTrace(e))}</span>`);\n          }\n        } else {\n          // can't handle it\n          throw e;\n        }\n      }\n    };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c5e71b3a2994fd2d91b70e64564c83fed865aed7","contentHash":"c7d1a5dc94677a2519a9a0344d08f784a81003e1b5f9eb83775f2092317fc46a"}}